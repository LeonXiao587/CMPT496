<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJ
        TUUH4wMPBy8j9vP2kAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAABW1SURBVHhe
        7d15zGV3XcfxaYGyCCiFiIBA0bIbkaoQYgICDcGQiMHI4sJmABMgccMqBcWgWBeMCIooizEIkWCgRBOR
        IIsIiAuLEdFCjQqWgkTa2BYKg35OZWA6/DrzLPd+7/ec83onrz945qH/POfM73Pvc+feI5IkSZIkSZIk
        SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSdKhulV8R/xwnBfPixfE
        S+M18cZ4EzArb4hXxUviV+Jn4yfiEXGPOCMkrag7xuNjOtzfGZ+K/wVW5/Px4fjT+IU4N24SkhbS18T3
        x+/FR2L0FwHA5DPx1vi5uF+cFpJm1PViWvN/EP8Toxsd4FT+PS6IO4ekxp0dvxGXxuhmBjiIL8Q7Ynqd
        0A1DUpO+KaZH+5+L0c0LsCkfj+fEzUPSjvr2eH1M63x0owJsyyfimWEISIWdGdM/7XHwA7v2X/Hk8IJB
        aYudHo+NT8boRgTYlbfF9OtISRvuW+JvYnTjAXRwdfxyeKGgtKGmR/1XxOiGA+jm72P6V0mSDtj04ppX
        x+gGA+js8nhMSNpn58T0Np2jGwtgLl4cfiUg7bEHx7SeRzcTwNy8Jb46JJ2k6X37pxfSjG4igLn6QNw2
        JA16WhyN0c0DMHcXh88VkE7oWTG6YQCW5JK4S0hKPxKjGwVgiaZPGbx9SKvue+LzMbpJAJbqH+IWIa2y
        B8ZnYnRzACzdu+ImIa2qu8ZlMbopANbiVSGtphvF9FaZo5sBYG2eEtIqmj7Kd3QTAKzRVXHvkBbdI2N0
        AwCs2UUxff6JtMjOCr/3Bxj7/ZAW2YUxuugB+H8PCmlRfVeMLnYAvuyfw6cHajHdOKb3wB5d7ABc23kh
        LaJfjNFFDsBXuiKm10xJs+7WcWWMLnIAxl4W0qz71Rhd3ABct6vDswCabWfG5TG6uAE4uReFNMt+PkYX
        NQCnNn1Y2m1DmlU3jU/F6KIGYG+mX6NKs+qJMbqYAdi76YGU9wXQrHpLjC5mAPbn4SHNojvG0RhdyADs
        z2tDmkXPitFFDMD+fTZuGVL7PhSjixiAg/mRkFp3dowuXgAO7g0hte7JMbp4ATi46U3Vrh9S214do4sX
        gMO5b0gtOy0uidGFC8Dh/ExILbtnjC5aAA7vz0Nq2RNidNECcHiXhdSyC2J00QKwGV8XUrteF6MLFoDN
        eEBI7fpgjC5YADZj+qfWUquuF9NnV48uWAA24/khtepOMbpYAdicC0Nq1TkxulgB2Jy3h9Sq+8foYgVg
        c94bUqseFqOLFYDN+XBIrXp0jC5WADbn0pBa9aQYXawAbM6VIbXqaTG6WAHYLKlVT4/RhQrAZkmtMgAA
        akitMgAAakitMgAAakitMgAAakitMgAAakitMgAAakitMgAAakitMgAAakitMgAAakitMgAAakitMgAA
        akitMgAAakitMgAAakitMgAAakitMgAAakitMgAAakitMgAAakitMgAAakitMgAAakitMgAAakitMgAA
        akitMgAAakitMgAAakitMgAAakitMgAAakitMgAAakitMgAAakitMgAAakitMgAAakitMgAAakitMgAA
        akitMgAAakitMgAAakitMgAAakitMgAAakitMgAAakitMgAAakitMgAAakitMgAAakitMgAAakitMgAA
        akitMgAAakitMgAAakitMgAAakitMgAAakitMgAAakitMgAAakitMgAAakitMgAAakitMgAAakitMgAA
        akitMgAAakitMgAAakitMgAAakitMgAAakitMgAAakitMgAAakitMgAAakitMgAAakitMgAAakitMgAA
        akitMgAAakitMgAAakitMgAAakitMgAAakitMgAAakitMgAAakitMgAAakitMgAAakitMgAAakitMgAA
        amgmnRnfGud+0QPiLnFGLCkDAKCGmvZV8eh4dXw0Rj+8yefiPXFBnBNzzwAAqKFm3Tp+LT4dox/Yqfxt
        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
        TMDbomsGAEANFbfrZwK+EPeJrhkAADW0g3b5TMBvRucMAIAa2lG7GAHvjRtF5wwAgBraYZUj4D/idtE9
        AwCghnbc9JqAj8Xoh7MpF8c3xhwyAABqqEG3j7+L0Q/osKZX/N8m5pIBAFBDTZrele+CuDpGP6j9uiqe
        HdePOWUAANRQs+4ar4nPx+gHdiqfi1fEN8QcMwAAaqhpZ8X5Mf1q4FRjYDr03xnPiDm80O9kGQAANTSD
        bh7fGY+P8+KZ8ZNf/N/TW/pOf76UDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACA
        GlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACA
        GlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACA
        GlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACA
        GlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACA
        GlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACA
        GlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACA
        GlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrDACAGlKrnhajCxWAzZJa9aQYXagAbM6VIbXq
        0TG6WAHYnEtDatXDYnSxArA5Hw6pVfeP0cUKwOa8N6RW3TtGFysAm/P2kFp1pxhdrABszoUhtep68ZkY
        XbAAbMbzQ2rXB2N0wQKwGU8OqV2vi9EFC8BmPCCkdl0QowsWgM34upDa9fgYXbAAHN6nQ2rZPWJ00QJw
        eG8MqWWnxSUxunABOJyfDqltr4rRhQvA4dwnpLb5VECAzZt+/z+934rUtrNjdPECcHDeAVCz6J9idAED
        cDBPCal958foAgZg/z4btwypfXeIozG6kAHYn9eGNJveEqMLGYD9eXhIs+mJMbqQAdi7T8UZIc2mm8Z0
        4Y4uaAD25ldDml3PidEFDcCpXRW3DWl2nRmXx+jCBuDkXhjSbPuVGF3YAFy3q+OOIc22W8eVMbrAARh7
        aUiz77kxusAB+EpXxFkhzb4bx0didKEDcG3PCGkxPTRGFzoAX/aPcYOQFtXrY3TBA/D/HhjS4ppe0XpZ
        jC56gLV7RUiL7ftidOEDrNm/xM1DWnQvjtENALBG0zv+3TukxXfD+LsY3QgAa/OkkFbTnePTMboZANbi
        lSGtru+M6amv0U0BsHRvjRuFtMq+Oz4Xo5sDYKk+ELcIadU9OUY3CMASXRy3CUnp/BjdKABL8p8xvQZK
        0nE9NY7G6KYBmLvpM1HODkmDHhFeGAgszd/G14akk/Sg8JbBwFK8ObzLn7TH7hXTW2OObiaAuXhhnBGS
        9tHN4g9jdFMBdDY9i/mokHSIHhtXxOgmA+hmeqtzL/aTNtQ3x7tjdLMBdPDZeF5Mn3ciaYOdFtOzAZ+I
        0c0HsCvT2/reMyRtsTPjBeE9A4BduySmBybTAxRJRZ0TfxyGAFDt43FeTC9WlrSj7hF/ED5UCNi2Ywf/
        TUJSk74xfj2mp+RGNy7AQXwh/jKeGP5Nv9S40+PcmJ4V+J8Y3dAAp/JvcUH4J33SDJvefnN6M46XxEUx
        uskBJtPnkPxFPCvuE5IW1O3jcfF78Y74ZIz+IgCWbXrN0PR2438Sz40Hx41D0oq6ZdwvpmEwvbjnF+I3
        4qXxmnhjvAmYlQtjeivx6dm/6Wn86VH9j8b3xN3C7/IlSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
        SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZpRR478HxzCb17dPQohAAAAAElFTkSuQmCC
</value>
  </data>
</root>